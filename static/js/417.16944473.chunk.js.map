{"version":3,"file":"static/js/417.16944473.chunk.js","mappings":"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","sources":["FileShare.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, List, message, Spin, Upload } from \"antd\";\r\nimport {\r\n  InboxOutlined,\r\n  DownloadOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport * as graphql from \"./graphql\";\r\nimport { Card, Container, Scroll, Text } from \"./Components\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\ninterface FileShareProps {\r\n  room: graphql.GetJoinedRoomsQuery[\"user_room\"][0][\"room\"] | undefined;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst fetchFileList = async (roomUUID: string) => {\r\n  try {\r\n    const response = await axios.get(\"/file/list?room=\" + roomUUID);\r\n    return response.data.fileList;\r\n  } catch (error) {\r\n    console.error(error);\r\n    message.error(\"获取文件列表失败！\");\r\n    return [];\r\n  }\r\n};\r\n\r\nconst downloadFile = async (roomUUID: string, filename: string) => {\r\n  try {\r\n    message.info(\"正在请求下载...\");\r\n    const response = await axios.get(\r\n      \"/file/download?room=\" + roomUUID + \"&filename=\" + filename\r\n    );\r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    message.success(\"开始下载文件！\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    message.error(\"下载文件失败！\");\r\n  }\r\n};\r\n\r\nconst FileShare: React.FC<FileShareProps> = ({ room, handleClose }) => {\r\n  const [fileList, setFileList] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (room) {\r\n      fetchFileList(room.uuid).then(setFileList);\r\n    }\r\n  }, [room]);\r\n\r\n  const uploadFile = async (file: File, onSuccess: any, onError: any) => {\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    try {\r\n      await axios.post(\"/file/upload/\" + room?.uuid, formData);\r\n      await fetchFileList(room?.uuid).then(setFileList);\r\n      message.success(\"上传文件成功！\");\r\n      onSuccess?.();\r\n    } catch (error) {\r\n      console.error(error);\r\n      message.error(\"上传文件失败！\");\r\n      onError?.(error as Error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshing(true);\r\n    if (room) {\r\n      fetchFileList(room.uuid).then(setFileList);\r\n    }\r\n    setTimeout(() => setRefreshing(false), 1000);\r\n  };\r\n\r\n  const Refresh = () => (\r\n    <Button\r\n      type=\"link\"\r\n      style={{\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        fontSize: \"16px\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n      }}\r\n      className=\"need-interaction\"\r\n      onClick={handleRefresh}\r\n    >\r\n      <ReloadOutlined spin={refreshing} />\r\n    </Button>\r\n  );\r\n\r\n  const Close = () => (\r\n    <Button\r\n      type=\"link\"\r\n      style={{\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        fontSize: \"12px\",\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: 0,\r\n      }}\r\n      className=\"need-interaction\"\r\n      onClick={handleClose}\r\n    >\r\n      ❌\r\n    </Button>\r\n  );\r\n\r\n  if (!room) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Card style={{ width: \"300px\", height: \"500px\" }}>\r\n      <Refresh />\r\n      <Close />\r\n      <Container style={{ margin: \"6px\" }}>\r\n        <Text>\r\n          <strong>{room.name}</strong>\r\n        </Text>\r\n        <Text size=\"small\" style={{ marginTop: \"6px\", marginBottom: \"6px\" }}>\r\n          文件共享空间\r\n        </Text>\r\n      </Container>\r\n      <FileList roomUUID={room.uuid} filelist={fileList} />\r\n      <div\r\n        className=\"need-interaction\"\r\n        style={{ marginTop: \"12px\", width: \"100%\" }}\r\n      >\r\n        <Dragger\r\n          customRequest={({ file, onSuccess, onError }) => {\r\n            uploadFile(file as File, onSuccess, onError);\r\n          }}\r\n          showUploadList={false}\r\n          disabled={loading}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            {loading ? <Spin size=\"large\" /> : <InboxOutlined />}\r\n          </p>\r\n          <p className=\"ant-upload-text\">拖拽或点击上传文件</p>\r\n        </Dragger>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface FileListProps {\r\n  roomUUID: string;\r\n  filelist: string[];\r\n}\r\n\r\nconst FileList: React.FC<FileListProps> = ({ roomUUID, filelist }) => {\r\n  const Download = (filename: string) => (\r\n    <Button\r\n      type=\"link\"\r\n      style={{ fontSize: \"18px\", width: \"18px\", height: \"18px\", padding: 0 }}\r\n      onClick={async () => await downloadFile(roomUUID, filename)}\r\n    >\r\n      <DownloadOutlined />\r\n    </Button>\r\n  );\r\n  return (\r\n    <Scroll>\r\n      <List\r\n        size=\"small\"\r\n        dataSource={filelist}\r\n        renderItem={(filename) => (\r\n          <List.Item style={{ padding: \"8px\" }} actions={[Download(filename)]}>\r\n            <Text style={{ wordBreak: \"break-all\" }}>{filename}</Text>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nexport default FileShare;\r\n"],"names":["Dragger","Upload","fetchFileList","async","axios","get","roomUUID","data","fileList","error","console","message","FileList","_ref3","filelist","Download","filename","_jsx","Button","type","style","fontSize","width","height","padding","onClick","info","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","success","downloadFile","children","DownloadOutlined","Scroll","List","size","dataSource","renderItem","Item","actions","Text","wordBreak","_ref","room","handleClose","setFileList","useState","loading","setLoading","refreshing","setRefreshing","useEffect","uuid","then","handleRefresh","setTimeout","Refresh","position","left","top","className","ReloadOutlined","spin","Close","right","_jsxs","Card","Container","margin","name","marginTop","marginBottom","customRequest","_ref2","file","onSuccess","onError","formData","FormData","append","post","uploadFile","showUploadList","disabled","Spin","InboxOutlined"],"sourceRoot":""}